    Здесь должен был быть игровой сеттинг, но мои писательские способности не позволяют написать захватывающе. Если найдутся желающие сделать это, я с удовольствием добавлю его в игру.
    Вместо завязки сюжета опишу вкратце суть игры и основы языка программирования, который придётся использовать.
    Представьте, что вы написали какую-то консольную программу. При выполнении она получает какие-то данные, осуществляет рассчеты, а после выводит результаты вычислений на экран. И вот вы сидите и отлаживаете то, что получилось - смотрите, какие значения принимают переменные, задаёте разные входные данные, проверяете экранный вывод. В итоге программа работает как надо! Покажете её другому программисту, и он, глядя на код, входные данные и содержимое экрана поймёт вашу задумку. А если код не показывать, поймёт? Если вместо кода вы покажете ему, как в процессе работы изменялись переменные - то это возможно! Не верите? Попробуйте сами :)
    Игра представляет собой набор уровней, каждый из которых - это написанная простая программа, набор входных данных к ней и возможность посмотреть, какие действия эта программа совершала в памяти в процессе работы и что при этом выводила на экран. Но программный код извесен вам лишь частично, требуется восстановить недостающие строки, чтобы, выполняясь, ваш вариант программы работал также, как неизвестная. Суть игры не в том, чтобы повторить в точности неизвестную программу, а просто написать такую же по смыслу. При одних и тех же входных данных ваша программа и неизвестная должны обеспечивать одинаковый срез памяти и экранный вывод. Ещё можно создавать свои уровни и давать поломать голову друзьям.
    Программы в игре написаны на выдуманном языке yBasic, в нём всего одиннадцать операторов:
        REM - признак строки комментария
        END - досрочно завершить выполнение программы
        LET - создать строковую или числовую переменную
        = - присвоить значение переменной или элементу массива
        DIM - создать строковый или числовой массив
        INPUT - ввести значение переменной из консоли
        PRINT[LN] - вывести результат выражения в консоль
        GOTO - перейти к определенной строке программы
        IF...[ELSE] - условный оператор
        GOSUB - вызвать подпрограмму
        RETURN - возврат из подпрограммы
    Для прохождения уровней предусмотрена простая IDE. Она позволяет запускать программу и отлаживать по шагам, смотреть содержимое памяти. Также есть специальная кнопка "SHOW". Нажатие на неё открывает набор срезов памяти и консольные ввод и вывод для программы, которую требуется восстановить. Нажатием на кнопку "CHECK" можно проверить, правильно ли вы угадали недостающие строки кода. Если всё верно, можно перейти на следующий уровень. 
    Первый уровень - ознакомительный. Весь код вам известен, можно нажать "CHECK" и сразу перейти к следующему уровню. А можно попробовать что-то изменить и изучить элементы управления.
    На остальные вопросы ответ даст кнопка "F1". Надеюсь, вам понравится :)
